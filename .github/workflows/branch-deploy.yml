name: "sfops - Deploy from a PR Branch"

on:
  workflow_call:
    inputs:
      pathToReleaseConfigs:
        description: "The path to the directory that has all release config"
        type: "string"
      additional-plugins:
        description: "Additional plugins to be installed"
        type: "string"
      dashboard-repo:
        description: "The repo to which the package version report is to be committed"
        type: "string"
      releasename:
        description: "The name of the release to be prefixed"
        type: "string"
      metrics-provider:
        description: "The metrics provider to be used"
        type: "string"
      workitem-url:
        description: "The url of the workitem"
        type: "string"
      workitem-filter:
        description: "The filter to be applied to the workitem"
        type: "string"
      sfopsbot-app-id: 
         description: The App id of the bot used for this workflow_call
         type: "string"
    secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"

jobs:
  analyze:
    name: "Analyze Impacted Domains"
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfops-lite:latest
    if: ${{ github.event.issue.pull_request && ( startsWith(github.event.comment.body, 'sfops forcetest') ||  startsWith(github.event.comment.body, 'sfops test') || (startsWith(github.event.comment.body, 'sfops unlock'))) }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      base-ref: ${{ steps.comment-branch.outputs.base_ref}}
      head-sha: ${{ steps.comment-branch.outputs.head_sha }}

    steps:
      - name: Add a reaction
        uses: GrantBirki/comment@e6bf4bc177996c9572b4ddb98b25eb1a80f9abc9 # pin@v2.0.7
        with:
          comment-id: ${{ github.event.comment.id}}
          reactions: eyes

      - uses: xt0rted/pull-request-comment-branch@v2
        name: Figure out the commit refs
        id: comment-branch

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.comment-branch.outputs.head_sha }}
          fetch-depth: 0

      - name: "Figure Impacted Release Defns"
        uses: flxbl-io/sfops-gh-actions/impactedReleaseDefnDetector@main
        with:
          pathToReleaseDefns: "config"
          from-commit: ${{ steps.comment-branch.outputs.base_sha }}
          to-commit: ${{ steps.comment-branch.outputs.head_sha }}

      - name: Set matrix data
        id: set-matrix
        run: |
          cat impacted-release-configs.json
          echo "matrix=$(jq -c . < ./impacted-release-configs.json)" >> $GITHUB_OUTPUT

  deploy-lock:
    if: ${{ needs.analyze.outputs.matrix != '[]' && ( github.event.issue.pull_request &&  (startsWith(github.event.comment.body, 'sfops test') || startsWith(github.event.comment.body, 'sfops forcetest'))) }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.analyze.outputs.matrix) }}
      fail-fast: true
    needs:
      - analyze
    outputs:
      continue: ${{ steps.branch-deploy.outputs.continue }}
      issue-number: ${{ github.event.issue.number }}
      branch-ref: ${{ steps.branch-deploy.outputs.ref }}
      locked: ${{ steps.lock.outcome }}
      base-ref: ${{ steps.branch-deploy.outputs.base_ref }}
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.analyze.outputs.head-sha  }}

      - uses: flxbl-io/sfops-gh-actions/lock@main
        id: unlock
        name: Test whether a lock exists
        if: startsWith(github.event.comment.body, 'sfops test')
        continue-on-error: true
        with:
          mode: "unlock-on-comment"
          environment: "test-${{ matrix.releaseName }}"
          environment_targets: "test-${{ matrix.releaseName }}"
          github_token: ${{steps.app-token.outputs.token}}

      - uses: mshick/add-pr-comment@v2
        name: If a lock already exists
        if: ${{ startsWith(github.event.comment.body, 'sfops test') &&  steps.unlock.outputs.issue-match == 'false' }}
        with:
          allow-repeats: false
          message-id: issue-${{ github.event.issue.number }}
          refresh-message-position: true
          repo-token: ${{ steps.app-token.outputs.token }}
          message: |
            ### An Existing issue is already queued __${{steps.unlock.outputs.issue-number}}__  ðŸš€

            Hello @${{ github.event.issue.user.login }} :wave:

            There is another deployment in progress, so the issue is locked by __${{steps.unlock.outputs.issue-number}}__
              
            Please proceed to https://github.com/${{github.repository}}/pull/${{steps.unlock.outputs.issue-number}}  cancel any exising deployment runs and then proceed to unlock the issue
            by typing in ```sfops unlock.```

      - uses: flxbl-io/sfops-gh-actions/fetchAllEnvs@main
        id: fetchTestEnvs
        with:
          gh_token: ${{ steps.app-token.outputs.token }}
          filter: "type:test,branch:${{ needs.analyze.outputs.base-ref }}"

      - name: Check for deployment gates
        id: branch-deploy
        if: ${{ startsWith(github.event.comment.body, 'sfops forcetest') || (  startsWith(github.event.comment.body, 'sfops test') && ( steps.unlock.outcome=='failure' || steps.unlock.outputs.unlocked == 'true'))}}
        uses: flxbl-io/sfops-gh-actions/branchDeploy@main
        with:
          reaction: "eyes"
          stable_branch: "main"
          release-name: ${{ matrix.releaseName }}
          test-envs: ${{steps.fetchTestEnvs.outputs.allEnvs}}
          github_token: ${{steps.app-token.outputs.token}}
          environment: test-${{ matrix.releaseName }}
          skip_ci: test-${{ matrix.releaseName }}
          skip_completing: "true"

      - name: Create Message Body as File
        id: message_template
        if: ${{ startsWith(github.event.comment.body, 'sfops test') && steps.branch-deploy.outputs.continue }}
        run: |
          printf " ### Deployment In Progress ðŸš€ " > message.md
          printf "\nHello @${{ github.event.issue.user.login }} :wave:\n" >> message.md
          printf "\n Your request to deploy __${{ github.event.issue.number }}__ for domain/releaseconfig  __${{ matrix.releaseName }}__ to __test__ environments is in progress" >> message.md
          printf "\nPlease find some information if available regarding your [deployment request](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})\n" >> message.md
          printf "\nTest Environment is now locked for the domain/releaseconfig __${{ matrix.releaseName }}__, If you want to push another work item, you need to unlock by typing in sfops unlock" >> message.md
          

      - name: Create Message Body as File
        id: message_template_forcetest
        if: ${{ startsWith(github.event.comment.body, 'sfops forcetest')  }}
        run: |
          printf " ### Deployment In Progress ( Force Pushed ) :warn: " > message.md
          printf "\nHello @${{ github.event.issue.user.login }} :wave:\n" >> message.md
          printf "\n Your request to deploy __${{ github.event.issue.number }}__ for domain/releaseconfig  __${{ matrix.releaseName }}__ to __test__ environments is in progress" >> message.md
          printf "\nPlease find some information if available regarding your [deployment request](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})\n" >> message.md
          printf "\nYou have force pushed your feature branch to test environments, this may overrwrite exiting workitems already in flight or have other unintended issues. Hope you know what you are doing!" >> message.md
                
  
      - uses: mshick/add-pr-comment@v2
        name: Print Validation Breakdown
        if: ${{ steps.branch-deploy.outputs.continue  || startsWith(github.event.comment.body, 'sfops forcetest') }}
        with:
          allow-repeats: false
          repo-token: ${{ steps.app-token.outputs.token }}
          message-id: deployment-${{ matrix.releaseName }}
          refresh-message-position: true
          message-path: |
             message.md 

      - uses: flxbl-io/sfops-gh-actions/lock@main
        name: Claim Deployment Lock to Test Environments
        id: lock
        if: ${{ startsWith(github.event.comment.body, 'sfops test') && ((steps.unlock.outcome == 'failure' || steps.unlock.outputs.unlocked == 'true'))}}
        with:
          mode: "lock"
          environment: "test-${{ matrix.releaseName }}"
          environment_targets: "test-${{ matrix.releaseName }}"
          github_token: ${{steps.app-token.outputs.token}}

      - uses: flxbl-io/sfops-gh-actions/branchDeploymentReporter@main
        name: Report Branch Deployments
        if: startsWith(github.event.comment.body, 'sfops test')
        id: report-test
        with:
          status: "locked"
          branch: ${{ steps.branch-deploy.outputs.ref }}
          domain: ${{ matrix.releaseName }}
          dashboard-repo: ${{ inputs.dashboard-repo }}
          gh_token: ${{steps.app-token.outputs.token}}
          issue-number: ${{ steps.branch-deploy.outputs.issue_number }}

      - uses: flxbl-io/sfops-gh-actions/branchDeploymentReporter@main
        name: Report Branch Deployments
        if: startsWith(github.event.comment.body, 'sfops forcetest')
        id: report-forcetest
        with:
          status: "forced"
          branch: ${{ steps.branch-deploy.outputs.ref }}
          domain: ${{ matrix.releaseName }}
          dashboard-repo: ${{ inputs.dashboard-repo }}
          gh_token: ${{steps.app-token.outputs.token}}
          issue-number: ${{ steps.branch-deploy.outputs.issue_number }}

  deploy-unlock:
    if: ${{ github.event.issue.pull_request &&  startsWith(github.event.comment.body, 'sfops unlock') }}
    runs-on: ubuntu-latest
    needs:
      - analyze
    strategy:
      matrix: ${{ fromJson(needs.analyze.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        name: "Get installation token for sfopsbot"
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: flxbl-io/sfops-gh-actions/lock@main
        id: unlock
        with:
          mode: "unlock-on-comment"
          environment: "test-${{ matrix.releaseName }}"
          environment_targets: "test-${{ matrix.releaseName }}"
          github_token: ${{steps.app-token.outputs.token}}

      - uses: mshick/add-pr-comment@v2
        name: If the issue doesnt match
        if: ${{ steps.unlock.outputs.issue-match == 'false' }}
        with:
          allow-repeats: false
          message-id: issue-${{ github.event.issue.number }}
          refresh-message-position: true
          repo-token: ${{ steps.app-token.outputs.token }}
          message: |
            Hello @${{ github.event.issue.user.login }} :wave:

            There is another deployment in progress, so the issue is locked by __${{steps.unlock.outputs.issue-number}}__

            If you wish to __cancel__ the onoging deployment, 
            Please proceed to https://github.com/${{github.repository}}/pull/${{steps.unlock.outputs.issue-number}} , cancel the ongoing run and then type in the following
            to unlock the issue  ```sfops unlock ```.

      - uses: mshick/add-pr-comment@v2
        name: If the issue matches
        if: ${{ steps.unlock.outputs.unlocked == 'true' }}
        with:
          allow-repeats: false
          message-id: issue-${{ github.event.issue.number }}
          refresh-message-position: true
          repo-token: ${{ steps.app-token.outputs.token }}
          message: |
            Hello @${{ github.event.issue.user.login }} :wave:

            Alright, you have succesfully removed the lock on the issue  https://github.com/${{github.repository}}/pull/${{ github.event.issue.number }}

            Please note this is not free of *side effects*, your earlier deployments still persist on environment, You would need to do  a manual cleanup on the environment to remove the feature

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.analyze.outputs.head-sha  }}

      - uses: flxbl-io/sfops-gh-actions/branchDeploymentReporter@main
        name: Report Branch Deployments
        id: report
        if: ${{ steps.unlock.outputs.unlocked == 'true'}}
        with:
          status: "unlocked"
          domain: ${{ matrix.releaseName }}
          dashboard-repo: ${{ inputs.dashboard-repo }}
          gh_token: ${{steps.app-token.outputs.token}}
          issue-number: ${{ github.event.issue.number }}

  build-deploy:
    name: "Deploy ${{ matrix.releaseName }} to test environments"
    needs:
      - analyze
      - deploy-lock
    if: ${{ needs.analyze.outputs.matrix != '[]'  && needs.deploy-lock.outputs.locked == 'success'}}
    strategy:
      matrix: ${{ fromJson(needs.analyze.outputs.matrix) }}
      fail-fast: false
      max-parallel: 1
    uses: flxbl-io/sfops-gh-actions/.github/workflows/build-test-domain.yml@main
    with:
      releaseconfig: ${{ matrix.filePath }}
      domain: ${{ matrix.releaseName }}
      branchname: ${{ needs.deploy-lock.outputs.branch-ref }}
      branch-ref: ${{ needs.deploy-lock.outputs.branch-ref }}
      base-branch: ${{ needs.deploy-lock.outputs.base-ref }}
      pathToReleaseConfigs: ${{ inputs.pathToReleaseConfigs }}
      dashboard-repo: ${{ inputs.dashboard-repo }}
      releasename: ${{ inputs.releaseName }}
      metrics-provider: ${{ inputs.metrics-provider }}
      workitem-url: ${{ inputs.workitem-url }}
      workitem-filter: ${{ inputs.workitem-filter}}
      sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
      additional-plugins: ${{ inputs.additional-plugins }}
    secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

