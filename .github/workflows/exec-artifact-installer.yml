name: IssueOps - Freeze User from an Org


on:
  workflow_call:
    inputs:
      issue-title: 
        description: "The title of the issue"
        type: "string"
      issue-body: 
         description: "The body of the issue"
         type: "string"
      issue-number:
         description: "The number of the issue"
         type: "string"
      sfopsbot-app-id: 
         description: The App id of the bot used for this workflow_call
         type: "string"
      dashboard-repo:
        description: "Target repo to submit package version report as HTML"
        type: "string"
    secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"  
  

jobs:
  issue-analyzer:
    if: contains(github.event.issue.title, 'Ops - Install an sfp artifact to an org(s)')
    runs-on: ubuntu-latest
    outputs:
      parsedEnvs: ${{ steps.issue-analyzer-output.outputs.parsedEnvs }}
      packageName: ${{ steps.issue-analyzer-output.outputs.packageName }}
      version: ${{ steps.issue-parser.outputs.issueparser_version }} 
      forceInstall: ${{ steps.issue-analyzer-output.outputs.forceInstall }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/request-an-artifact-installation.yml   

      - uses: actions/github-script@v6
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ "ops", "ops-sfp-artifact-installation-request"]
            })


      - name: Create Comment before initiating action
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ steps.app-token.outputs.token }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Thanks for requesting installation of a sfp artifact to org(s) ${{ steps.issue-parser.outputs.issueparser_orgnames }} 
            We will start the process of installing the package to each orgs.
            You will be notified when the package installation is complete.
            Please check the logs at https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

            This issue is being processed by [sfops ðŸ¤–]

      - name: Set Output
        id: issue-analyzer-output
        run: |
           IFS=',' read -r -a array <<< "${{ steps.issue-parser.outputs.issueparser_orgnames }}"
           output="["
           for element in "${array[@]}"
           do
            output+="\"$element\","
           done
           output="${output::-1}"
           output+="]"
           echo "parsedEnvs=$output" >> "$GITHUB_OUTPUT"
           echo "packageName=${{  steps.issue-parser.outputs.issueparser_packageName }}" >> "$GITHUB_OUTPUT"
           if [ "${{  steps.issue-parser.outputs.issueparser_forceInstall }}" == "yes" ]; then
            echo "forceInstall=true" >> "$GITHUB_OUTPUT"
           else
            echo "forceInstall=false" >> "$GITHUB_OUTPUT"
           fi
          
  execute_action:
    needs: issue-analyzer
    uses:  flxbl-io/sfops-gh-actions/.github/workflows/sfp-artifact-installer.yml@main
    strategy:
      fail-fast: false
      matrix:
        environment: ${{  fromJson(needs.issue-analyzer.outputs.parsedEnvs) }}
    with:
        environment:  ${{ matrix.environment }}
        packages:  '${{ needs.issue-analyzer.outputs.packageName }}:${{ needs.issue-analyzer.outputs.version }}'
        dashboard-repo:  ${{ inputs.dashboard-repo }}
        forceInstall: ${{ needs.issue-analyzer.outputs.forceInstall }}
        sfopsbot-app-id : ${{ inputs.sfopsbot-app-id }}
    secrets:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
        DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
        SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
        

