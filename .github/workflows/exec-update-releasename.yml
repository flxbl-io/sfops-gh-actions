name: IssueOps - Update Release 


on:
  workflow_call:
    inputs:
      issue-title: 
        description: "The title of the issue"
        type: "string"
      issue-body: 
         description: "The body of the issue"
         type: "string"
      issue-number:
         description: "The number of the issue"
         type: "string"
      sfopsbot-app-id: 
         description: The App id of the bot used for this workflow_call
         type: "string"
    secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"  
  



jobs:
  issue-analyzer:
    if: contains(github.event.issue.title, 'Ops - Update release name')
    runs-on: ubuntu-latest
    outputs:
      releaseName: ${{ steps.issue-analyzer-output.outputs.releasename }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/update-release-name.yml      

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
         app-id: ${{ vars.SFOPSBOT_APP_ID }}
         private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}


      - uses: actions/github-script@v6
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [ "ops", "ops-update-release-name"]
            })

      - name: Create Comment before initiating action
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ steps.app-token.outputs.token }}
          body: |
            Hello @${{ github.event.issue.user.login }} :wave:
            
            Your request has been received and is being processed. The release names will be updated in a moment
            All release definitions from this point will have the new release names prefixed from this stage

      - name: Set Output
        id: issue-analyzer-output
        run: |
            cleaned_release_name=$(echo  "${{ steps.issue-parser.outputs.issueparser_releasename }}" | tr '[:blank:]' '_' | tr -dc '[:alnum:]_.\\-')
            echo "releaseName=$cleaned_release_name" >> "$GITHUB_OUTPUT"
          
           

  execute_action:
    runs-on: ubuntu-latest
    needs: issue-analyzer
    if: contains(github.event.issue.title, 'Ops - Update release name')
    steps:

     # gh needs a repo bummer
     - uses: actions/checkout@v3

     - uses: actions/create-github-app-token@v1
       id: app-token
       with:
        app-id: ${{ vars.SFOPSBOT_APP_ID }}
        private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}


     - name: Update Release Name
       run: |
         gh variable set RELEASENAME  --body  ${{ needs.issue-analyzer.outputs.releaseName }}  
       env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

