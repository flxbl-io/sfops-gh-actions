name: 'IssueOps - Analyze an issue'

on:
  workflow_call:
     inputs:
        issue-title: 
          description: "The title of the issue"
          type: "string"
        issue-body: 
          description: "The body of the issue"
          type: "string"
        issue-number:
          description: "The number of the issue"
          type: "string"
        metrics-provider:
          description: "The metrics provider to be used"
          type: "string"
        sfopsbot-app-id: 
          description: The App id of the bot used for this workflow_call
          type: "string"
        dashboard-repo: 
          description: Dashboard repo where any reports need to be push
          type: "string"          
     secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"


jobs:
 
  create-an-env:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-create-env.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-a-dev-sandbox:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-create-dev-sandbox.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deletion-of-component:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-deletion-of-component.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  test-deletion-of-component:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-test-deletion-of-component.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  fetch-scratchorg-from-pool:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-fetch-scratchorg-from-pool.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}   
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  freeze-user:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-freeze-user.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}   
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  unfreeze-user:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-unfreeze-users.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}   
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-releasename:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-update-releasename.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}   
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  patch-release-branch:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-patch-release-branch.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}   
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  artifact-installer:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-artifact-installer.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}   
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     dashboard-repo: ${{ inputs.dashboard-repo }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  package-installer:
   uses: flxbl-io/sfops-gh-actions/.github/workflows/exec-package-installer.yml@main
   with:
     issue-title: ${{ inputs.issue-title }}
     issue-body: ${{ inputs.issue-body }}
     issue-number: ${{ inputs.issue-number }}   
     sfopsbot-app-id: ${{ inputs.sfopsbot-app-id }}
     metrics-provider: ${{ inputs.metrics-provider }}
   secrets:
      DEVHUB_SFDX_AUTH_URL: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
      SB_SFDX_AUTH_URL: ${{ secrets.SB_SFDX_AUTH_URL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_HOST: ${{ secrets.DATADOG_HOST }}
      SFOPSBOT_APP_PRIVATE_KEY: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}      

# Do not close issues for fetching scratch org from pool or creating dev sandbox            
  close_issue:
     runs-on: ubuntu-latest
     needs: 
        -  create-an-env
        -  deletion-of-component
        -  test-deletion-of-component
        -  freeze-user
        -  unfreeze-user
        -  update-releasename
        -  patch-release-branch
        -  artifact-installer
        -  package-installer
     if: | 
         always() &&
         (
         needs.create-an-env.result == 'success' ||
         needs.deletion-of-component.result == 'success' ||
         needs.test-deletion-of-component.result == 'success' ||
         needs.fetch-scratchorg-from-pool.result == 'success' ||
         needs.freeze-user.result == 'success' ||
         needs.unfreeze-user.result == 'success' ||
         needs.update-releasename.result == 'success' ||
         needs.patch-release-branch.result == 'success' ||
         needs.artifact-installer.result == 'success'  ||
         needs.package-installer.result == 'success' 
         )
     steps:

      # gh needs a repo bummer
      - uses: actions/checkout@v3


      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}

      - name: Close Issue
        run: |
         gh issue close ${{github.event.issue.number}} -c " Hello @${{ github.event.issue.user.login }} :wave:  Your request has been sucessfully processed by [sfops 🤖]" -r "Completed"
        env:
           GH_TOKEN: ${{ steps.app-token.outputs.token }}

  comment_issue_on_error:
      runs-on: ubuntu-latest
      needs:  
        -  create-an-env
        -  create-a-dev-sandbox
        -  deletion-of-component
        -  test-deletion-of-component
        -  fetch-scratchorg-from-pool
        -  freeze-user
        -  unfreeze-user
        -  update-releasename
        -  patch-release-branch
        -  artifact-installer
        -  package-installer
      if: | 
          always() &&
          (
            needs.create-an-env.result == 'failure' ||
            needs.create-a-dev-sandbox.result == 'failure' ||
            needs.deletion-of-component.result == 'failure' ||
            needs.test-deletion-of-component.result == 'failure' ||
            needs.fetch-scratchorg-from-pool.result == 'failure' ||
            needs.freeze-user.result == 'failure' ||
            needs.unfreeze-user.result == 'failure' ||
            needs.update-releasename.result == 'failure' ||
            needs.patch-release-branch.result == 'failure' ||
            needs.artifact-installer.result == 'failure' ||
            needs.package-installer.result == 'failure' 
          )
      steps:

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ inputs.sfopsbot-app-id }}
          private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}

      - name: Create Comment after failure
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{github.event.issue.number}}
          token: ${{ steps.app-token.outputs.token }}
          body: |      
            ## ⚠️ Something went wrong !!! ⚠️

            Hello @${{ github.event.issue.user.login }} :wave: ,

            Looks like the **sfops 🤖**   has failed to process your request successfully.  Can you have a look please?
            
            This would need your manual attention please check the job run
            at the link https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

            [1]: This comment is auto generated by [sfops 🤖]