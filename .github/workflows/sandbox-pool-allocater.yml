name: "Allocated Created Sandbox to Pool"
on:
  workflow_call:
    inputs:
      users-to-be-activated:
         description: The users to be activated in the sandbox
         type: "string"
      path-to-config:
         description: The path to sandbox pool config
         type: "string"
      sfopsbot-app-id: 
         description: The App id of the bot used for this workflow_call
         type: "string"
      metrics-provider:
        description: "The metrics provider to be used"
        type: "string"
    secrets:
      NPM_TOKEN:
        description: "GH TOKEN to publish to NPM"
      DEVHUB_SFDX_AUTH_URL:
        description: "Devhub Auth URL"
      SB_SFDX_AUTH_URL:
        description: "Sandbox Auth URL"
      DATADOG_API_KEY:
        description: "Datadog api key to report metrics"
      DATADOG_HOST:
        description: "Datadog host to report metrics"
      SFOPSBOT_APP_PRIVATE_KEY:
        description: "Private key of the bot app used"



jobs:
  check-ci-sandbox-status:
    runs-on: ubuntu-latest
    continue-on-error: true 
    container: ghcr.io/flxbl-io/sfops:latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
         app-id: ${{ inputs.sfopsbot-app-id }}
         private-key: ${{ secrets.SFOPSBOT_APP_PRIVATE_KEY }}

         
      - name: 'Authenticate DevHub'
        run: |
              echo "${{ secrets.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
              sfdx auth:sfdxurl:store -f authfile -a devhub

      #Create a sandbox
      - name: 'Provision sandboxes to Available'
        uses:  flxbl-io/sfops-gh-actions/checkCISandboxStatus@main
        with:
          devhub_sfdx_auth_url: ${{ secrets.DEVHUB_SFDX_AUTH_URL }}
          usersToBeActivated:  ${{ inputs.users-to-be-activated }}
          pathToPoolConfigFile: ${{ inputs.path-to-config }}
          gh_token:  ${{ steps.app-token.outputs.token }}




