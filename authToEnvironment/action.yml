name: 'Authenticate to an environment or a sandbox created by DevHub User'
description: 'Authenticate to an environment or a sandbox created by DevHub User'

inputs:
  DEVHUB_SFDX_AUTH_URL:
    description: "Auth URL to DEVHUB"
    required: true
  SB_SFDX_AUTH_URL:
    description: "Auth URL to Sandbox"
    required: false
  environment:
    description: "Environment to authenticate to"
    required: false
  environment-profile:
    description: "Environment profile to use"
    required: false
  org-name:
    description: "Name of the sandbox in case of non env sandbox"
    required: false
outputs:
  alias:
    description: 'Name of the sandbox'
    value: ${{ steps.handle-auth.outputs.alias }}
  devhub_username:
    description: 'Devhub username'
    value: ${{ steps.auth-devhub.outputs.devhub_username }}


runs:
  using: "composite"


  steps:
      - name: Authenticate to Production
        shell: bash
        id: auth-devhub
        run: |
              #No matter what authenticate devhub
              echo "${{ inputs.DEVHUB_SFDX_AUTH_URL }}" > ./authfile
              sfdx auth:sfdxurl:store -f ./authfile -a prod
              devhubInfo=$(sf org display -o prod --json)
              DEVHUB_USERNAME=$(echo $devhubInfo | jq -r '.result.username')
              echo "devhub_username=$DEVHUB_USERNAME" >> "$GITHUB_OUTPUT"


      - name: Authenticate to ${{ inputs.environment }}3
        id: handle-auth
        shell: bash
        run: |
              handle_prod_or_production() {
                if [[ "$1" == "prod" || "$1" == "production" ]]; then
                  echo "alias=prod" >> "$GITHUB_OUTPUT"
                else
                  echo "alias=$1" >> "$GITHUB_OUTPUT"
                fi
              }

              handle_sandbox_url() {
                echo "$1" > ./authfile
                alias_lower=$(echo "$2" | tr '[:upper:]' '[:lower:]')
                sfdx auth:sfdxurl:store -f ./authfile -a "$alias_lower"
                echo "alias=$alias_lower" >> "$GITHUB_OUTPUT"
              }

              handle_no_auth_url() {
                alias_lower=$(echo "$2" | tr '[:upper:]' '[:lower:]')
                echo "No Auth URL found for $1, Attempting to login assuming the devhub user created environment"
                sf org sandbox resume -n "$1" -o prod
                SBX_NAME=$(echo "$1" | sed -e 's/^ *//' -e 's/ *$//')
                SBX_NAME=$(echo "$SBX_NAME" | tr '[:upper:]' '[:lower:]')
                sf alias set "$2"="$DEVHUB_USERNAME.$SBX_NAME"
                echo "alias=$alias_lower" >> "$GITHUB_OUTPUT"
              }

              # Enable case-insensitive matching
              shopt -s nocasematch

              # Main logic
              if [[ "${{ inputs.org-name }}" =~ "prod" || "${{ inputs.org-name }}" =~ "production" || "${{ inputs.environment }}" =~ "prod" || "${{ inputs.environment }}" =~ "production" ]]; then
                handle_prod_or_production "${{ inputs.org-name }}"
              elif [[ "${{ inputs.SB_SFDX_AUTH_URL }}" != '' ]]; then
                handle_sandbox_url "${{ inputs.SB_SFDX_AUTH_URL }}" "${{ inputs.environment }}"
              else
                handle_no_auth_url "${{ inputs.org-name }}" "${{ inputs.environment-profile }}"
              fi

              # Disable case-insensitive matching
              shopt -u nocasematch
