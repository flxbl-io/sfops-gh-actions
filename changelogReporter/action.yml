name: 'Changelog to Html Reporter'
description: 'Convert changelog.json to html and commit to repo'
inputs:
  source-branch: 
    description: 'name of the branch from which to read changelog.json'
    required: true
  target-repo:  
    description: 'name of the repo to report to, will create a folder release-pipeline-view in the target repo'
    required: true
  pathToReleaseConfigs:
    description: 'The path to the directory that contains release defns'
    required: true
    default: 'config'
  additional-releaseName:  
    description: 'Additional releaseName to process'
    required: false
  domain:  
    description: 'name of the domain for which to report changelog'
    required: true
  workitem-url:
     description: 'url of the jira board'
     required: true
  source-repo-url:
      description: 'url of the source repo'
      required: true
  gh_token:
    description: 'github token to use for committing to repo'
    required: true

runs:
  using: "composite"
  steps:
    - run: |
          # Install gh cli on ubuntu
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y                
      shell: bash

    - name: 'Fetch all ReleaseNames'
      id: getAllReleaseNames
      uses: flxbl-io/sfops-gh-actions/fetchAllReleaseNames@main  
      with:
          pathToReleaseConfigs: ${{ inputs.pathToReleaseConfigs}}
    
    - run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git fetch --all
          mkdir -p _data/releasechangelog
          export GH_TOKEN=${{inputs.gh_token}}
          git show origin/${{inputs.source-branch}}:${{inputs.domain}}/releasechangelog.json > _data/releasechangelog/${{inputs.domain}}.json
          $GITHUB_ACTION_PATH/git-repo-commiter.sh ${{inputs.target-repo}}  ${{steps.getAllReleaseNames.outputs.releaseNames}} _data _data "updated changelog for domain ${{inputs.domain}}"
   
      shell: bash
