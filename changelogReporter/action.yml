name: "Changelog to Html Reporter"
description: "Convert changelog.json to html and commit to repo"
inputs:
  source-branch:
    description: "name of the branch from which to read changelog.json"
    required: true
  target-repo:
    description: "name of the repo to report to, will create a folder release-pipeline-view in the target repo"
    required: true
  pathToReleaseConfigs:
    description: "The path to the directory that contains release defns"
    required: true
    default: "config"
  additional-releaseName:
    description: "Additional releaseName to process"
    required: false
  domain:
    description: "name of the domain for which to report changelog"
    required: true
  workitem-url:
    description: "url of the jira board"
    required: true
  source-repo-url:
    description: "url of the source repo"
    required: true
  gh_token:
    description: "github token to use for committing to repo"
    required: true

runs:
  using: "composite"
  steps:
    - name: "Fetch all ReleaseNames"
      id: getAllReleaseNames
      uses: flxbl-io/sfops-gh-actions/fetchAllReleaseNames@main
      with:
        pathToReleaseConfigs: ${{ inputs.pathToReleaseConfigs}}

    - run: |
        git config --global --add safe.directory $GITHUB_WORKSPACE
        git fetch --all
        mkdir -p _data/releasechangelog
        mkdir -p _data/releasedefns/${{inputs.domain}}
        mkdir -p temp_checkout
        export GH_TOKEN=${{inputs.gh_token}}
        git --work-tree=temp_checkout checkout origin/${{inputs.source-branch}} -- ${{inputs.domain}}
        find temp_checkout/${{inputs.domain}} -name "*.yml" -exec cp  \{} _data/releasedefns/${{inputs.domain}} \;
        cp temp_checkout/${{inputs.domain}}/releasechangelog.json _data/releasechangelog/${{inputs.domain}}.json
        rm -rf temp_checkout
        $GITHUB_ACTION_PATH/git-repo-commiter.sh ${{inputs.target-repo}} ${{steps.getAllReleaseNames.outputs.releaseNames}} _data _data "updated changelog for domain ${{inputs.domain}}"
      shell: bash
