name: "Update Contents of a git directory"
description: "Fetch all release names given a path to the directory that contains release configs"
inputs:
  target-repo:
    description: "name of the repo to report to, will create a folder in the target repo"
    required: true
  source-dir:
    description: "The path to the source directory, whose contents should be copied over"
    required: true
    default: "_data"
  target-dir:
    description: "The target directory which the source directory is copied over"
    required: true
    default: "_data"
  commit-message:
    description: "The commit message to use when committing changes"
    required: false
  path-to-all-release-name-file:
    description: "The path to the output file generated by fetchAllReleaseNames"
    default: "all-releases.json"
  update-release-names:
    description: "Update release names"
    required: false
    default: "true"
  file-name-to-delete:
    description: "Name of the file to delete from the repository"
    required: false
  gh_token:
    description: "github token to use for committing to repo"
    required: true

runs:
  using: "composite"
  steps:
    - run: |
        git config --global --add safe.directory $GITHUB_WORKSPACE
        export GH_TOKEN=${{ inputs.gh_token }}
        echo "GH_TOKEN=$GH_TOKEN" >> $GITHUB_ENV
      shell: bash

    - run: |
        node $GITHUB_ACTION_PATH/dist/index.js --gh_token ${{ inputs.gh_token }} --source_repo_url ${{ github.repository }} --current_branch ${{ github.ref_name }} --github_repo_url ${{ inputs.target-repo }} --dir_to_copy ${{ inputs.source-dir }} --target_dir ${{ inputs.target-dir }} --commit_message "${{ inputs.commit-message }}" --isToUpdateReleaseNames ${{ inputs.update-release-names }} --allReleaseJSONPath ${{ inputs.path-to-all-release-name-file }} --fileNameToDelete ${{ inputs.file-name-to-delete }}
      shell: bash
      id: updateGitRepo
